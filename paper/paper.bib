
@misc{amploptimizationinc.AMPLStramlinedModeling,
  title = {{{AMPL}} - {{Stramlined}} Modeling for Real Optimization},
  author = {AMPL Optimization Inc.},
  journal = {AMPL},
  abstract = {Why AMPL? The AMPL system supports the entire optimization modeling lifecycle \textemdash{} formulation, testing, deployment, and maintenance \textemdash{} in an integrated way that promotes rapid development and reliable results. Using a high-level algebraic representation that describes optimization models in the...},
  howpublished = {https://ampl.com/},
  langid = {american},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/JNJKCUAT/ampl.com.html}
}

@article{AnacondaSoftwareDistribution2020,
  title = {Anaconda Software Distribution},
  year = {2020},
  journal = {Anaconda Documentation},
  publisher = {{Anaconda Inc.}},
  version = {Vers. 2-2.4.0}
}

@article{bealGEKKOOptimizationSuite2018,
  title = {{{GEKKO Optimization Suite}}},
  author = {Beal, Logan and Hill, Daniel and Martin, R. and Hedengren, John},
  year = {2018},
  month = jul,
  journal = {Processes},
  volume = {6},
  number = {8},
  pages = {106},
  issn = {2227-9717},
  doi = {10.3390/pr6080106},
  abstract = {This paper introduces GEKKO as an optimization suite for Python. GEKKO specializes in dynamic optimization problems for mixed-integer, nonlinear, and differential algebraic equations (DAE) problems. By blending the approaches of typical algebraic modeling languages (AML) and optimal control packages, GEKKO greatly facilitates the development and application of tools such as nonlinear model predicative control (NMPC), real-time optimization (RTO), moving horizon estimation (MHE), and dynamic simulation. GEKKO is an object-oriented Python library that offers model construction, analysis tools, and visualization of simulation and optimization. In a single package, GEKKO provides model reduction, an object-oriented library for data reconciliation/model predictive control, and integrated problem construction/solution/visualization. This paper introduces the GEKKO Optimization Suite, presents GEKKO's approach and unique place among AMLs and optimal control packages, and cites several examples of problems that are enabled by the GEKKO library.},
  langid = {english},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/CB6X756L/Beal et al. - 2018 - GEKKO Optimization Suite.pdf}
}

@article{brownPyPSAPythonPower2018,
  ids = {brown_pypsa:_2018,pypsa},
  title = {{{PyPSA}}: {{Python}} for {{Power System Analysis}}},
  shorttitle = {{{PyPSA}}},
  author = {Brown, Tom and H{\"o}rsch, Jonas and Schlachtberger, David},
  year = {2018},
  month = jan,
  journal = {Journal of Open Research Software},
  volume = {6},
  eprint = {1707.09913},
  eprinttype = {arxiv},
  pages = {4},
  issn = {2049-9647},
  doi = {10.5334/jors.188},
  archiveprefix = {arXiv},
  langid = {english},
  keywords = {Physics - Physics and Society},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/5LKDYR7N/Brown et al. - 2018 - PyPSA Python for Power System Analysis.pdf;/home/fabian/snap/zotero-snap/common/Zotero/storage/FXD8UHS4/Brown et al. - 2018 - PyPSA Python for Power System Analysis.pdf}
}

@article{brownPyPSAPythonPower2018a,
  title = {{{PyPSA}}: {{Python}} for Power System Analysis Version 0.13.1},
  author = {Brown, T. and H{\"o}rsch, J. and Schlachtberger, D.},
  year = {2018},
  doi = {10.5281/zenodo.1208706}
}

@article{brownSynergiesSectorCoupling2018,
  title = {Synergies of Sector Coupling and Transmission Extension in a Cost-Optimised, Highly Renewable {{European}} Energy System},
  author = {Brown, T. and Schlachtberger, D. and Kies, A. and Schramm, S. and Greiner, M.},
  year = {2018},
  month = jan,
  journal = {arXiv:1801.05290 [physics]},
  eprint = {1801.05290},
  eprinttype = {arxiv},
  primaryclass = {physics},
  abstract = {There are two competing concepts for the integration of high shares of renewable energy: the coupling of electricity to other energy sectors, such as transport and heating, and the reinforcement of transmission networks. In this paper both sector coupling and continent-wide grid integration are considered in the model PyPSA-Eur-Sec-30, the first open, spatially-resolved, temporally-resolved and sector-coupled energy model of Europe. Using a simplified network with one node per country, the cost-optimal system is calculated for a 95\% reduction in carbon dioxide emissions compared to 1990, incorporating electricity, transport and heat demand. The demand-side management potential from battery electric vehicles (BEV), power-to-gas units (P2G) and long-term thermal energy storage (LTES) make a significant contribution to the smoothing of variability from wind and solar and to the reduction of total system costs. The cost-minimising integration of BEV pairs well with the daily variations of solar power, while P2G and LTES balance the synoptic and seasonal variations of demand and renewables. In all scenarios, an expansion of cross-border transmission reduces system costs, but the more tightly the energy sectors are coupled, the weaker the benefit of transmission becomes.},
  archiveprefix = {arXiv},
  keywords = {Physics - Physics and Society},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/3W863UEM/Brown et al. - 2018 - Synergies of sector coupling and transmission exte.pdf;/home/fabian/snap/zotero-snap/common/Zotero/storage/WI983EY7/Brown et al. - 2018 - Synergies of sector coupling and transmission exte.pdf;/home/fabian/snap/zotero-snap/common/Zotero/storage/94QTFVZR/1801.html;/home/fabian/snap/zotero-snap/common/Zotero/storage/GHVA6DU2/1801.html}
}

@misc{browntomPyPSAPythonPower2022a,
  title = {{{PyPSA}}: {{Python}} for {{Power System Analysis}}},
  shorttitle = {{{PyPSA}}},
  author = {Brown, Tom and H{\"o}rsch, Jonas and Hofmann, Fabian and Neumann, Fabian and Zeyen, Lisa and Syranidis, Chloe and Frysztacki, Martha and Schlachtberger, David and Glaum, Philipp},
  year = {2022},
  month = apr,
  doi = {10.5281/ZENODO.6478312},
  abstract = {What's Changed Add pre-commit hooks by @euronion in https://github.com/PyPSA/PyPSA/pull/365 apply pre-commit formats by @fneum in https://github.com/PyPSA/PyPSA/pull/375 doc: fix binder links by @FabianHofmann in https://github.com/PyPSA/PyPSA/pull/378 add scikit-learn to doc environment for spatial clustering example by @fneum in https://github.com/PyPSA/PyPSA/pull/384 New Contributors @pre-commit-ci made their first contribution in https://github.com/PyPSA/PyPSA/pull/379 {$<$}strong{$>$}Full Changelog{$<$}/strong{$>$}: https://github.com/PyPSA/PyPSA/compare/v0.19.2...v0.19.3},
  copyright = {MIT License, Open Access},
  howpublished = {Zenodo}
}

@manual{daskdevelopmentteamDaskLibraryDynamic2016,
  type = {Manual},
  title = {Dask: {{Library}} for Dynamic Task Scheduling},
  author = {{Dask Development Team}},
  year = {2016}
}

@article{dunningJuMPModelingLanguage2017,
  title = {{{JuMP}}: {{A Modeling Language}} for {{Mathematical Optimization}}},
  shorttitle = {{{JuMP}}},
  author = {Dunning, Iain and Huchette, Joey and Lubin, Miles},
  year = {2017},
  month = jan,
  journal = {SIAM Review},
  volume = {59},
  number = {2},
  pages = {295--320},
  issn = {0036-1445, 1095-7200},
  doi = {10.1137/15M1020575},
  langid = {english},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/CK3Y9ZJL/Dunning et al. - 2017 - JuMP A Modeling Language for Mathematical Optimiz.pdf}
}

@misc{FICOXpressSolver,
  title = {{{FICO}}\textregistered{} {{Xpress Solver}}},
  journal = {FICO},
  abstract = {FICO\textregistered{} Xpress Optimization is composed of four core components: FICO\textregistered{} Xpress Insight, FICO\textregistered{} Xpress Executor, FICO\textregistered{} Xpress Solver and FICO\textregistered{} Xpress Workbench.},
  howpublished = {https://www.fico.com/en/products/fico-xpress-solver},
  langid = {english},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/7ZQMD23H/fico-xpress-solver.html}
}

@book{fourerAMPLModelingLanguage2003,
  title = {{{AMPL}}: A Modeling Language for Mathematical Programming},
  shorttitle = {{{AMPL}}},
  author = {Fourer, Robert and Gay, David M. and Kernighan, Brian W.},
  year = {2003},
  edition = {2nd ed},
  publisher = {{Thomson/Brooks/Cole}},
  address = {{Pacific Grove, CA}},
  isbn = {978-0-534-38809-6},
  lccn = {QA402.5 .F688 2003},
  keywords = {Linear programming,Programming (Mathematics)}
}

@misc{gamsdevelopmentcorporationGAMSCuttingEdge,
  title = {{{GAMS}} - {{Cutting Edge Modeling}}},
  author = {GAMS Development Corporation},
  howpublished = {https://www.gams.com/},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/LCJFIAG2/www.gams.com.html}
}

@misc{GLPKGNUProject,
  title = {{{GLPK}} - {{GNU Project}} - {{Free Software Foundation}} ({{FSF}})},
  howpublished = {https://www.gnu.org/software/glpk/},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/5IDSE3SA/glpk.html}
}

@misc{GurobiFastestSolver,
  title = {Gurobi - {{The Fastest Solver}}},
  journal = {Gurobi},
  abstract = {Gurobi builds and supports the leading math programming solvers available for all major problem types. It's all we do.},
  howpublished = {https://www.gurobi.com/},
  langid = {american},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/UGXMDJRY/www.gurobi.com.html}
}

@misc{GurobipyPythonInterface,
  title = {Gurobipy: {{Python}} Interface to {{Gurobi}}},
  shorttitle = {Gurobipy},
  copyright = {Proprietary},
  keywords = {lp,mip;,optimization;},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/4J6UUSQ3/gurobipy.html}
}

@article{harrisArrayProgrammingNumPy2020,
  title = {Array Programming with {{NumPy}}},
  author = {Harris, Charles R. and Millman, K. Jarrod and {van der Walt}, St{\'e}fan J. and Gommers, Ralf and Virtanen, Pauli and Cournapeau, David and Wieser, Eric and Taylor, Julian and Berg, Sebastian and Smith, Nathaniel J. and Kern, Robert and Picus, Matti and Hoyer, Stephan and {van Kerkwijk}, Marten H. and Brett, Matthew and Haldane, Allan and {del R{\'i}o}, Jaime Fern{\'a}ndez and Wiebe, Mark and Peterson, Pearu and {G{\'e}rard-Marchant}, Pierre and Sheppard, Kevin and Reddy, Tyler and Weckesser, Warren and Abbasi, Hameer and Gohlke, Christoph and Oliphant, Travis E.},
  year = {2020},
  month = sep,
  journal = {Nature},
  volume = {585},
  number = {7825},
  pages = {357--362},
  issn = {0028-0836, 1476-4687},
  doi = {10.1038/s41586-020-2649-2},
  abstract = {Abstract                            Array programming provides a powerful, compact and expressive syntax for accessing, manipulating and operating on data in vectors, matrices and higher-dimensional arrays. NumPy is the primary array programming library for the Python language. It has an essential role in research analysis pipelines in fields as diverse as physics, chemistry, astronomy, geoscience, biology, psychology, materials science, engineering, finance and economics. For example, in astronomy, NumPy was an important part of the software stack used in the discovery of gravitational waves               1               and in the first imaging of a black hole               2               . Here we review how a few fundamental array concepts lead to a simple and powerful programming paradigm for organizing, exploring and analysing scientific data. NumPy is the foundation upon which the scientific Python ecosystem is constructed. It is so pervasive that several projects, targeting audiences with specialized needs, have developed their own NumPy-like interfaces and array objects. Owing to its central position in the ecosystem, NumPy increasingly acts as an interoperability layer between such array computation libraries and, together with its application programming interface (API), provides a flexible framework to support the next decade of scientific and industrial analysis.},
  langid = {english},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/UHBAQ4ZL/Harris et al. - 2020 - Array programming with NumPy.pdf}
}

@book{hartPyomoOptimizationModeling2017,
  title = {Pyomo \textemdash{} {{Optimization Modeling}} in {{Python}}},
  author = {Hart, William E. and Laird, Carl D. and Watson, Jean-Paul and Woodruff, David L. and Hackebeil, Gabriel A. and Nicholson, Bethany L. and Siirola, John D.},
  year = {2017},
  series = {Springer {{Optimization}} and {{Its Applications}}},
  volume = {67},
  publisher = {{Springer International Publishing}},
  address = {{Cham}},
  doi = {10.1007/978-3-319-58821-6},
  isbn = {978-3-319-58819-3 978-3-319-58821-6}
}

@article{horschPyPSAEurOpenOptimisation2018,
  title = {{{PyPSA-Eur}}: {{An}} Open Optimisation Model of the {{European}} Transmission System},
  shorttitle = {{{PyPSA-Eur}}},
  author = {H{\"o}rsch, Jonas and Hofmann, Fabian and Schlachtberger, David and Brown, Tom},
  year = {2018},
  month = nov,
  journal = {Energy Strategy Reviews},
  volume = {22},
  pages = {207--215},
  issn = {2211467X},
  doi = {10.1016/j.esr.2018.08.012},
  copyright = {All rights reserved},
  langid = {english},
  keywords = {Physics - Physics and Society},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/GF6NK2LI/Hörsch et al. - 2018 - PyPSA-Eur An open optimisation model of the Europ.pdf;/home/fabian/snap/zotero-snap/common/Zotero/storage/R33TMIQV/Hörsch et al. - 2018 - PyPSA-Eur An open optimisation model of the Europ.pdf;/home/fabian/snap/zotero-snap/common/Zotero/storage/WRVZQJVU/Hörsch et al. - 2018 - PyPSA-Eur An open optimisation model of the Europ.pdf}
}

@article{hoyerXarrayNDLabeled2017,
  title = {Xarray: {{N-D}} Labeled {{Arrays}} and {{Datasets}} in {{Python}}},
  shorttitle = {Xarray},
  author = {Hoyer, Stephan and Hamman, Joseph J.},
  year = {2017},
  month = apr,
  journal = {Journal of Open Research Software},
  volume = {5},
  pages = {10},
  issn = {2049-9647},
  doi = {10.5334/jors.148},
  langid = {english},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/28QPG5G7/Hoyer and Hamman - 2017 - xarray N-D labeled Arrays and Datasets in Python.pdf;/home/fabian/snap/zotero-snap/common/Zotero/storage/V8A4HE3F/Hoyer and Hamman - 2017 - xarray N-D labeled Arrays and Datasets in Python.pdf}
}

@article{huangfuParallelizingDualRevised2018,
  title = {Parallelizing the Dual Revised Simplex Method},
  author = {Huangfu, Q. and Hall, J. A. J.},
  year = {2018},
  month = mar,
  journal = {Mathematical Programming Computation},
  volume = {10},
  number = {1},
  pages = {119--142},
  issn = {1867-2957},
  doi = {10.1007/s12532-017-0130-5},
  abstract = {This paper introduces the design and implementation of two parallel dual simplex solvers for general large scale sparse linear programming problems. One approach, called PAMI, extends a relatively unknown pivoting strategy called suboptimization and exploits parallelism across multiple iterations. The other, called SIP, exploits purely single iteration parallelism by overlapping computational components when possible. Computational results show that the performance of PAMI is superior to that of the leading open-source simplex solver, and that SIP complements PAMI in achieving speedup when PAMI results in slowdown. One of the authors has implemented the techniques underlying PAMI within the FICO Xpress simplex solver and this paper presents computational results demonstrating their value. In developing the first parallel revised simplex solver of general utility, this work represents a significant achievement in computational optimization.},
  langid = {english},
  keywords = {65K05,90C05,90C06,Linear programming,Parallel computing,Revised simplex method},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/G6TX6H9Z/Huangfu and Hall - 2018 - Parallelizing the dual revised simplex method.pdf}
}

@article{ListOptimizationSoftware2022,
  title = {List of Optimization Software},
  year = {2022},
  month = jun,
  journal = {Wikipedia},
  abstract = {Given a transformation between input and output values, described by a mathematical function f, optimization deals with generating and selecting a best solution from some set of available alternatives, by systematically choosing input values from within an allowed set, computing the output of the function, and recording the best output values found during the process. Many real-world problems can be modeled in this way. For example, the inputs can be design parameters of a motor, the output can be the power consumption, or the inputs can be business choices and the output can be the obtained profit. An optimization problem, in this case a minimization problem, can be represented in the following way Given: a function f : A                         \textrightarrow{}                 \{\textbackslash displaystyle \textbackslash to \}    R from some set A to the real numbers Search for: an element x0 in A such that f(x0) {$\leq$} f(x) for all x in A.In continuous optimization, A is some subset of the Euclidean space Rn, often specified by a set of constraints, equalities or inequalities that the members of A have to satisfy. In combinatorial optimization, A is some subset of a discrete space, like binary strings, permutations, or sets of integers. The use of optimization software requires that the function f is defined in a suitable programming language and connected at compile or run time to the optimization software. The optimization software will deliver input values in A, the software module realizing f will deliver the computed value f(x) and, in some cases, additional information about the function like derivatives. In this manner, a clear separation of concerns is obtained: different optimization software modules can be easily tested on the same function f, or a given optimization software can be used for different functions f. The following tables provide a list of notable optimization software organized according to license and business model type.},
  copyright = {Creative Commons Attribution-ShareAlike License},
  langid = {english},
  annotation = {Page Version ID: 1091166705},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/M5UU8G7J/List_of_optimization_software.html}
}

@misc{Pulp2022,
  title = {Pulp},
  year = {2022},
  month = jul,
  abstract = {A python Linear Programming API},
  howpublished = {COIN-OR Foundation},
  keywords = {constraints,mip,pulp,python,solver}
}

@misc{rebackPandasdevPandasPandas2022,
  title = {Pandas-Dev/Pandas: {{Pandas}} 1.4.3},
  shorttitle = {Pandas-Dev/Pandas},
  author = {Reback, Jeff and Jbrockmendel and McKinney, Wes and Van Den Bossche, Joris and Roeschke, Matthew and Augspurger, Tom and Hawkins, Simon and Cloud, Phillip and Gfyoung and Sinhrks and Hoefler, Patrick and Klein, Adam and Terji Petersen and Tratner, Jeff and She, Chang and Ayd, William and Naveh, Shahar and JHM Darbyshire and Shadrach, Richard and Garcia, Marc and Schendel, Jeremy and Hayden, Andy and Saxton, Daniel and Gorelli, Marco Edward and Fangchen Li and W{\"o}rtwein, Torsten and Zeitlin, Matthew and Jancauskas, Vytautas and McMaster, Ali and Li, Thomas},
  year = {2022},
  month = jun,
  doi = {10.5281/ZENODO.3509134},
  abstract = {This is a patch release in the 1.4.x series and includes some regression and bug fixes. We recommend that all users upgrade to this version. See the full whatsnew for a list of all the changes. The release will be available on the defaults and conda-forge channels: &lt;code&gt;conda install pandas &lt;/code&gt; Or via PyPI: &lt;code&gt;python3 -m pip install --upgrade pandas &lt;/code&gt; Please report any issues with the release on the pandas issue tracker.},
  copyright = {Open Access},
  howpublished = {Zenodo}
}

@misc{teamXpressFICOXpress,
  title = {Xpress: {{FICO Xpress Optimizer Python}} Interface},
  shorttitle = {Xpress},
  author = {dev {team}, FICO Xpress Optimizer},
  copyright = {Other/Proprietary License},
  keywords = {minlp;,mip;,optimization;,Scientific/Engineering,Software Development,xpress},
  file = {/home/fabian/snap/zotero-snap/common/Zotero/storage/G5BJ5NSQ/xpress.html}
}
